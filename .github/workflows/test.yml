name: Test
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  repository_dispatch:
    types: [run-tests]
  workflow_dispatch:
    inputs:
      version:
        description: "Version to test (e.g., v0.1.1, or 'latest' for the latest release)"
        required: false
        type: string
      api_test_env:
        description: "API test environment"
        required: false
        type: choice
        options:
          - production
          - staging
        default: "production"

permissions:
  contents: write
  actions: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    if: >
      github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: Checkout specific version or latest release
        if: github.event.inputs.version != '' || github.event.client_payload.sdk_version != ''
        run: |
          VERSION=${{ github.event.inputs.version || github.event.client_payload.sdk_version }}
          if [ "$VERSION" = "latest" ]; then
            VERSION=$(git describe --tags `git rev-list --tags --max-count=1`)
          fi
          git checkout $VERSION
          echo "Running tests for version: $VERSION"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Run tests
        env:
          PROD_TESTING_API_KEY: ${{ secrets.PROD_TESTING_API_KEY }}
          STAGING_TESTING_API_KEY: ${{ secrets.STAGING_TESTING_API_KEY }}
          API_TEST_ENV: ${{ github.event.inputs.api_test_env || github.event.client_payload.environment || vars.API_TEST_ENV }}
        run: |
          echo "Running tests against API environment: $API_TEST_ENV"
          if [ -z "$VERSION" ]; then
            echo "Running tests on latest main branch"
          fi
          pytest
