name: End-to-End Testing
on:
  schedule:
    - cron: "0 2 * * *" # Runs at 2 AM UTC daily
  workflow_dispatch:
    inputs:
      version:
        description: "Version to test (e.g., v0.1.1, or 'latest' for the latest release)"
        required: false
        type: string
      api_test_env:
        description: "API test environment"
        required: false
        type: choice
        options:
          - production
          - staging
        default: "production"

permissions:
  contents: read
  actions: write

jobs:
  e2e_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v2

      - name: Set up Python
        run: uv python install

      - name: Checkout specific version or latest release
        run: |
          VERSION=${{ github.event.inputs.version }}
          if [ "$VERSION" = "latest" ]; then
            VERSION=$(git describe --tags `git rev-list --tags --max-count=1`)
          fi
          git checkout $VERSION
          echo "Running e2e tests for version: $VERSION"

      - name: Run e2e tests
        id: e2e_tests
        continue-on-error: true
        env:
          PROD_E2E_TESTING_API_KEY: ${{ secrets.PROD_E2E_TESTING_API_KEY }}
          STAGING_E2E_TESTING_API_KEY: ${{ secrets.STAGING_E2E_TESTING_API_KEY }}
          API_TEST_ENV: ${{ github.event.inputs.api_test_env || vars.API_TEST_ENV }}
          OPENAI_KEY: ${{ secrets.OPENAI_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          RUN_E2E: true
        run: |
          echo "Running e2e tests against API environment: $API_TEST_ENV"
          start_time=$(date +%s)
          uv run pytest tests/end_to_end/ -v -m e2e --junit-xml=test-results.xml || echo "Tests failed"
          end_time=$(date +%s)
          duration=$((end_time - start_time))
          echo "test_exit_code=$?" >> $GITHUB_OUTPUT
          echo "duration=$duration" >> $GITHUB_OUTPUT

      - name: Process test results
        if: steps.e2e_tests.outputs.test_exit_code != '0'
        id: process_results
        run: |
          FAILED_TESTS=$(grep -A 1 "FAILED tests/end_to_end/" test-results.xml | grep -v "FAILED tests/end_to_end/" | tr '\n' ' ' | head -c 800)
          echo "failed_tests=$FAILED_TESTS" >> $GITHUB_OUTPUT

      - name: Report Success
        if: steps.e2e_tests.outputs.test_exit_code == '0'
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            {
              "text": ":white_check_mark: SDK E2E Testing Passed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "* :white_check_mark: SDK E2E Testing Passed*\nEnvironment: ${{ github.event.inputs.api_test_env || vars.API_TEST_ENV }}\nVersion: ${{ github.ref }}\nDuration: ${{ steps.e2e_tests.outputs.duration }}s\nCheck the <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|workflow run> for details."
                  }
                }
              ]
            }

      - name: Report Failure
        if: steps.e2e_tests.outputs.test_exit_code != '0'
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            {
              "text": ":warning: SDK E2E Testing Failed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "* :warning: SDK E2E Testing Failed*\nEnvironment: ${{ github.event.inputs.api_test_env || vars.API_TEST_ENV }}\nVersion: ${{ github.ref }}\nDuration: ${{ steps.e2e_tests.outputs.duration }}s\n\n*Failed Tests:*\n```${{ steps.process_results.outputs.failed_tests }}```\n\nCheck the <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|workflow run> for details."
                  }
                }
              ]
            }

      - name: Exit with test status
        if: always()
        run: |
          test_exit_code="${{ steps.e2e_tests.outputs.test_exit_code }}"
          exit ${test_exit_code:-1}
