name: End-to-End Testing
on:
  schedule:
    - cron: "0 2 * * *" # Runs at 2 AM UTC daily
  workflow_dispatch:

permissions:
  contents: read
  actions: write

jobs:
  e2e_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v2

      - name: Set up Python
        run: uv python install

      - name: Run e2e tests
        id: e2e_tests
        env:
          PROD_E2E_TESTING_API_KEY: ${{ secrets.PROD_E2E_TESTING_API_KEY }}
          OPENAI_KEY: ${{ secrets.OPENAI_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          RUN_E2E: true
        run: |
          start_time=$(date +%s)
          pytest_exit_code=0
          test_output=$(uv run pytest tests/end_to_end/ -v -m e2e 2>&1) || pytest_exit_code=$?
          end_time=$(date +%s)
          duration=$((end_time - start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT
          echo "exit_code=$pytest_exit_code" >> $GITHUB_OUTPUT
          echo "test_output<<EOF" >> $GITHUB_OUTPUT
          echo "$test_output" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Report to Slack
        if: always()
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            {
              "text": "${{ steps.e2e_tests.outputs.exit_code == '0' && ':white_check_mark: SDK E2E Testing Passed' || ':warning: SDK E2E Testing Failed' }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*${{ steps.e2e_tests.outputs.exit_code == '0' && ':white_check_mark: SDK E2E Testing Passed' || ':warning: SDK E2E Testing Failed' }}*\nDuration: ${{ steps.e2e_tests.outputs.duration }}s\nCheck the <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|workflow run> for details."
                  }
                }
                ${{ steps.e2e_tests.outputs.exit_code != '0' && format(', {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Test Output:*\n```{0}```",
                    "verbatim": true
                  }
                }', steps.e2e_tests.outputs.test_output) || '' }}
              ]
            }

      - name: Exit with test status
        if: always()
        run: exit ${{ steps.e2e_tests.outputs.exit_code }}
